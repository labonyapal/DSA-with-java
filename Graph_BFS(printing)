//the code is showing printing neighbour and bfs
//         0
//       /
//      2 -- 3
//        \ /
//         1

// output  0 2 3 1



import java.util.*;

public class student {
  static class edge{
       int src;
       int dest;
       edge(int s, int d){
           src=s;
           dest=d;
       }
   } 
    static void createGraph(ArrayList<edge> graph[]){
        for(int i=0; i<graph.length; i++){
            graph[i] = new ArrayList<edge>();
        }
        graph[0].add(new edge(0, 2));
          graph[1].add(new edge(1, 2));
            graph[1].add(new edge(1, 3));
              graph[2].add(new edge(2, 1));
                graph[2].add(new edge(2, 3));
                  graph[2].add(new edge(2, 0));
                  graph[3].add(new edge(3, 1));
                    graph[3].add(new edge(3, 2));
    }

public static void bfs(ArrayList<edge> graph[], int v){
 Queue<Integer> q = new LinkedList<>();
 boolean visited[] = new boolean[v];
 q.add(0);
 while(!q.isEmpty()){
    int curr = q.remove();
    if(visited[curr]==false){
       System.out.println(curr+" ");
       visited[curr]=true;
       for(int i=0; i<graph[curr].size(); i++){
         edge e=graph[curr].get(i);
         q.add(e.dest);
           }
       }
     }
 }

}
    public static void main(String[] args) {
       
        int v=4;
        ArrayList<edge> graph[]=new ArrayList[v];
        createGraph(graph);
        System.out.println("Graph created");
     for(int i=0; i<graph[2].size(); i++){
         System.out.println(graph[2].get(i).src+" "+graph[2].get(i).dest); //printing neighbour
      }
      bfs(graph, v);
}

